{
	"info": {
		"_postman_id": "32b03e53-bac6-4fe9-be79-9382399aeca8",
		"name": "Books",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20571494"
	},
	"item": [
		{
			"name": "All books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check title\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData[0].title).to.eql(\"Mitologia\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Specific title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Specific title\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData[0].title).to.eql(\"Diuna\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/?title=Diuna",
					"host": [
						"{{url}}"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "title",
							"value": "Diuna"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new book/Title check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Title check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"Zasady Gry\");\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 7,\r\n        \"title\": \"Zasady Gry\",\r\n        \"author\": \"Vladimir Wolff\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n        \"id\": 6,\r\n        \"title\": \"Metalowa Burza\",\r\n        \"author\": \"Vladimir Wolff\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/6",
					"host": [
						"{{url}}"
					],
					"path": [
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Specific author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Include author\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Wolff\");\r",
							"});\r",
							"pm.test(\"Specific author\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData[0].author).to.eql(\"Vladimir Wolff\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/?author=Vladimir Wolff",
					"host": [
						"{{url}}"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "author",
							"value": "Vladimir Wolff"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Added Book",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/7",
					"host": [
						"{{url}}"
					],
					"path": [
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check new title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"Tygrys i Smok\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": 6,\r\n        \"title\": \"Tygrys i Smok\",\r\n        \"author\": \"Vladimir Wolff\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/6",
					"host": [
						"{{url}}"
					],
					"path": [
						"6"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000/books",
			"type": "string"
		}
	]
}